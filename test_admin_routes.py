import requests
from requests.exceptions import RequestException

print("\n======================================================================")
print("üß™ TEST ADMIN ROUTES - BRICON CMS")
print("======================================================================\n")

BASE_URL = "http://localhost:5000"

routes = [
    ("/admin/login", "Trang ƒëƒÉng nh·∫≠p"),
    ("/admin/dashboard", "Trang dashboard"),
    ("/admin/products", "Qu·∫£n l√Ω s·∫£n ph·∫©m"),
    ("/admin/blogs", "Qu·∫£n l√Ω blog"),
    ("/admin/categories", "Danh m·ª•c"),
    ("/admin/users", "Ng∆∞·ªùi d√πng"),
    ("/admin/settings", "C·∫•u h√¨nh h·ªá th·ªëng"),
    ("/admin/faqs", "FAQ"),
    ("/admin/contacts", "Li√™n h·ªá"),
    ("/admin/projects", "D·ª± √°n"),
    ("/admin/jobs", "Tuy·ªÉn d·ª•ng"),
    ("/admin/media", "Th∆∞ vi·ªán ·∫£nh"),
]

# Ki·ªÉm tra server ƒëang ch·∫°y
print("üîç Ki·ªÉm tra server...")
try:
    res = requests.get(BASE_URL)
    if res.status_code == 200:
        print("‚úÖ Server ƒëang ch·∫°y\n")
    else:
        print(f"‚ö†Ô∏è Server ph·∫£n h·ªìi nh∆∞ng l·ªói ({res.status_code})\n")
except RequestException:
    print("‚ùå Server kh√¥ng ch·∫°y. H√£y b·∫≠t Flask app tr∆∞·ªõc khi test.")
    exit(1)

passed = 0
failed = 0

print("======================================================================")
print("üìç TEST ADMIN ROUTES")
print("======================================================================\n")

for route, name in routes:
    url = BASE_URL + route
    try:
        response = requests.get(url, timeout=5)
        if response.status_code in (200, 302):  # 302 cho ph√©p redirect (vd ch∆∞a login)
            print(f"‚úÖ {name:<30} - {url}")
            passed += 1
        else:
            print(f"‚ùå {name:<30} - Status: {response.status_code}")
            failed += 1
    except RequestException as e:
        print(f"‚ùå {name:<30} - L·ªói k·∫øt n·ªëi ({e})")
        failed += 1

print("\n======================================================================")
print("üìä K·∫æT QU·∫¢ TEST")
print("======================================================================\n")

print(f"  ‚úÖ Passed: {passed}/{len(routes)}")
print(f"  ‚ùå Failed: {failed}/{len(routes)}")

if failed == 0:
    print("\nüéâ T·∫§T C·∫¢ ROUTE ADMIN ƒê·ªÄU HO·∫†T ƒê·ªòNG T·ªêT!\n")
else:
    print("\n‚ö†Ô∏è  C√ì ROUTE ADMIN B·ªä L·ªñI, KI·ªÇM TRA L·∫†I LOG FLASK.\n")
